{"version":3,"sources":["routes/Home.module.css","routes/Detail.js","components/Movie.js","routes/Home.js","App.js","index.js","components/Movie.module.css"],"names":["module","exports","Detail","id","useParams","getMovie","a","fetch","json","console","log","useEffect","Movie","coverImg","title","year","summary","genres","className","styles","movie","src","alt","movie__img","movie__title","to","movie__year","length","slice","movie__genres","map","g","Home","useState","loading","setLoading","movies","setMovies","getMovies","data","container","loader","medium_cover_image","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,qBAAqB,OAAS,uB,+ICe9EC,MAdf,WAAmB,IACTC,EAAOC,cAAPD,GACFE,EAAQ,uCAAG,4BAAAC,EAAA,sEAEPC,MAAM,qDAAD,OAAsDJ,IAFpD,8BAIZK,OAJY,OACTA,EADS,OAKfC,QAAQC,IAAIF,GALG,2CAAH,qDAUd,OAHAG,qBAAU,WACRN,MACC,IACI,yC,wBCsBMO,MAhCf,YAAgE,IAA/CT,EAA8C,EAA9CA,GAAIU,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAEnD,OACE,sBAAKC,UAAWC,IAAOC,MAAvB,UACE,qBAAKC,IAAKR,EAAUS,IAAKR,EAAOI,UAAWC,IAAOI,aAClD,gCACE,qBAAIL,UAAWC,IAAOK,aAAtB,UACE,cAAC,IAAD,CAAMC,GAAE,iBAAYtB,GAApB,SAA2BW,IAAc,OAG3C,oBAAII,UAAWC,IAAOO,YAAtB,SAAoCX,IACpC,4BAAIC,EAAQW,OAAS,IAAjB,UAA0BX,EAAQY,MAAM,EAAG,KAA3C,OAAuDZ,IAC3D,oBAAIE,UAAWC,IAAOU,cAAtB,SACGZ,EAAOa,KAAI,SAACC,GAAD,OACV,6BAAaA,GAAJA,e,iBC+BNC,MA7Cf,WAAiB,IAAD,EACgBC,oBAAS,GADzB,mBACPC,EADO,KACEC,EADF,OAEcF,mBAAS,IAFvB,mBAEPG,EAFO,KAECC,EAFD,KAGRC,EAAS,uCAAG,4BAAAhC,EAAA,sEAERC,MAAM,0EAFE,8BAKdC,OALc,OACVA,EADU,OAMhB6B,EAAU7B,EAAK+B,KAAKH,QACpBD,GAAW,GAPK,2CAAH,qDAaf,OAJAxB,qBAAU,WAER2B,MACC,IAED,qBAAKpB,UAAWC,IAAOqB,UAAvB,SACGN,EACC,qBAAKhB,UAAWC,IAAOsB,OAAvB,SACE,gDAIF,qBAAKvB,UAAWC,IAAOiB,OAAvB,SACGA,EAAON,KACN,SACEV,GADF,OAGE,cAAC,EAAD,CAEEjB,GAAIiB,EAAMjB,GACVY,KAAMK,EAAML,KACZF,SAAUO,EAAMsB,mBAChB5B,MAAOM,EAAMN,MACbE,QAASI,EAAMJ,QACfC,OAAQG,EAAMH,QANTG,EAAMjB,YCJZwC,MA3Bf,WACE,OACE,eAAC,IAAD,WACG,IAED,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,WAAZ,UACG,IAED,uCAHF,OAKA,eAAC,IAAD,CAAOA,KAAK,aAAZ,UACG,IAED,cAAC,EAAD,IAAW,OAGb,eAAC,IAAD,CAAOA,KAAK,IAAZ,UACG,IAED,cAAC,EAAD,c,MCjBVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BjD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,aAAe,4BAA4B,YAAc,2BAA2B,cAAgB,gC","file":"static/js/main.eb5c47d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__97rpc\",\"loader\":\"Home_loader__4iU7f\",\"movies\":\"Home_movies__3Ohm2\"};","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // useParams 위해 import\nfunction Detail() {\n  const { id } = useParams(); // App.js에서 라우터 경로로 설정한 id변수의 값을 파라미터로 전달받음\n  const getMovie = async () => {\n    const json = await (\n      await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    ) // 해당 영화의 id경로로 api에 request 요청\n      .json();\n    console.log(json);\n  };\n  useEffect(() => {\n    getMovie();\n  }, []);\n  return <h1>Detail</h1>;\n}\nexport default Detail;\n","import PropTypes from \"prop-types\"; // 프롭타입 사용하기 위해 import\nimport { Link } from \"react-router-dom\"; // Link : 브라우저의 새로고침 없이 유저를 다른 페이지로 이동시켜주는 컴포넌트\nimport styles from \"./Movie.module.css\";\n\nfunction Movie({ id, coverImg, title, year, summary, genres }) {\n  // 'Home.js'에서 받은 파라미터들\n  return (\n    <div className={styles.movie}>\n      <img src={coverImg} alt={title} className={styles.movie__img} />\n      <div>\n        <h2 className={styles.movie__title}>\n          <Link to={`/movie/${id}`}>{title}</Link>{\" \"}\n          {/* h2태그(영화 제목)에 링크를 걸어서 {}안의 url로 이동하도록 만듬 -> 'Detail' 컴포넌트로 이동 */}\n        </h2>\n        <h3 className={styles.movie__year}>{year}</h3>\n        <p>{summary.length > 235 ? `${summary.slice(0, 235)}...` : summary}</p>\n        <ul className={styles.movie__genres}>\n          {genres.map((g) => (\n            <li key={g}>{g}</li> // map 메소드 사용시 key값 부여하는거 잊지말기! => key값은 고유한 값이면 아무거나 상관없음\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n// 'Movie' 컴포넌트의 프롭타입 설정 : prop-types는 추가적인 사항이지 반드시 적어야할 코드는 아님\nMovie.propTypes = {\n  // 컴포넌트의 파라미터로 받는 값들의 부수적인 사항들\n  id: PropTypes.number.isRequired, // id값은 숫자형으로 필수적으로 필요\n  coverImg: PropTypes.string.isRequired, // coverImg값은 문자형으로 필수적으로 필요\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired, // genres값은 배열로 내부 값들은 문자열로 필수적으로 필요\n};\n\nexport default Movie;\n","import { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport styles from \"./Home.module.css\";\n\nfunction Home() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n      )\n    ).json(); // request 보내고 response 받은 데이터를 json화 시켜서 저장\n    setMovies(json.data.movies); // 위의 과정을 거친 데이터를 영화정보들을 가져옴\n    setLoading(false);\n  };\n  useEffect(() => {\n    // useEffect를 통해 위의 'getMoive' 함수를 처음 렌더링시에 한번만 실행 -> 이후 state가 바뀌어서 렌더링 시에도 이 함수는 재실행 x\n    getMovies();\n  }, []); // fetch를 통해 api의 정보를 불러오는 코드를 렌더링할때마다 실행하게되면 속도가 느려지므로 한번만 실행하기 위해 작성\n  return (\n    <div className={styles.container}>\n      {loading ? ( // 'loading' state가 true이면\n        <div className={styles.loader}>\n          <span>Loading...</span>\n        </div> // 해당 코드 실행(loading 텍스트를 화면에 띄워줌)\n      ) : (\n        // 'loading' state가 false이면\n        <div className={styles.movies}>\n          {movies.map(\n            (\n              movie // fetch로 api에서 얻은 영화정보들에서 개별적인 영화정보에 접근하여 'Movie' 컴포넌트에 파라미터를 넘겨주고 실행\n            ) => (\n              <Movie\n                key={movie.id} // 리액트에서 map등 배열을 이용할때는 반드시 key값을 지정해줘야함\n                id={movie.id}\n                year={movie.year}\n                coverImg={movie.medium_cover_image}\n                title={movie.title}\n                summary={movie.summary}\n                genres={movie.genres}\n              />\n            )\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // 라우터 사용위해 import -> 버전 바뀐거 확인해서 그에 맞게 사용\nimport Detail from \"./routes/Detail\";\nimport Home from \"./routes/Home\";\nfunction App() {\n  return (\n    <Router>\n      {\" \"}\n      {/* 아래 버전은 예전 버전 -> 라우터 사용법 버전 확인하고 알맞는 사용법 사용하기  */}\n      <Switch>\n        <Route path=\"/abot-us\">\n          {\" \"}\n          {/* 해당 경로에 오면 */}\n          <h1>Hello</h1> {/* 다음 코드 실행 */}\n        </Route>\n        <Route path=\"/movie/:id\">\n          {\" \"}\n          {/* ':' 을 사용하여 id변수를 통해 url을 입력하여 이동 가능  => useParams() */}\n          <Detail />{\" \"}\n          {/* 위의 경로에서 ':'뒤의 id변수의 값을 'Detail' 컴포넌트에서 파라미터로 전달받음 */}\n        </Route>\n        <Route path=\"/\">\n          {\" \"}\n          {/* 자주 사용되는 홈 경로 */}\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\"; // 스타일 import 하는법 참고\n\n// 모든 결과물이 담겨 있는 App 컴포넌트를  렌더링\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\",\"movie__img\":\"Movie_movie__img__23OrX\",\"movie__title\":\"Movie_movie__title__p6svq\",\"movie__year\":\"Movie_movie__year__1Fz81\",\"movie__genres\":\"Movie_movie__genres__2j2Od\"};"],"sourceRoot":""}